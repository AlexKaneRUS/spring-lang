public static readonly HaskellCompositeNodeType VARID = new HaskellCompositeNodeType("RULE_varid",  0);
public static readonly HaskellCompositeNodeType CONID = new HaskellCompositeNodeType("RULE_conid",  1);
public static readonly HaskellCompositeNodeType ASCSYMBOL = new HaskellCompositeNodeType("RULE_ascSymbol",  2);
public static readonly HaskellCompositeNodeType VARSYM = new HaskellCompositeNodeType("RULE_varsym",  3);
public static readonly HaskellCompositeNodeType CONSYM = new HaskellCompositeNodeType("RULE_consym",  4);
public static readonly HaskellCompositeNodeType CON = new HaskellCompositeNodeType("RULE_con",  5);
public static readonly HaskellCompositeNodeType VAROP = new HaskellCompositeNodeType("RULE_varop",  6);
public static readonly HaskellCompositeNodeType CONOP = new HaskellCompositeNodeType("RULE_conop",  7);
public static readonly HaskellCompositeNodeType OP = new HaskellCompositeNodeType("RULE_op",  8);
public static readonly HaskellCompositeNodeType MODULE = new HaskellCompositeNodeType("RULE_module",  9);
public static readonly HaskellCompositeNodeType TYCON = new HaskellCompositeNodeType("RULE_tycon",  10);
public static readonly HaskellCompositeNodeType ATYPE = new HaskellCompositeNodeType("RULE_atype",  11);
public static readonly HaskellCompositeNodeType TYPE = new HaskellCompositeNodeType("RULE_type",  12);
public static readonly HaskellCompositeNodeType CONSTR = new HaskellCompositeNodeType("RULE_constr",  13);
public static readonly HaskellCompositeNodeType CONSTRS = new HaskellCompositeNodeType("RULE_constrs",  14);
public static readonly HaskellCompositeNodeType SIMPLETYPE = new HaskellCompositeNodeType("RULE_simpletype",  15);
public static readonly HaskellCompositeNodeType VAR = new HaskellCompositeNodeType("RULE_var",  16);
public static readonly HaskellCompositeNodeType VARS = new HaskellCompositeNodeType("RULE_vars",  17);
public static readonly HaskellCompositeNodeType GENDECL = new HaskellCompositeNodeType("RULE_gendecl",  18);
public static readonly HaskellCompositeNodeType INTEGER = new HaskellCompositeNodeType("RULE_integer",  19);
public static readonly HaskellCompositeNodeType PFLOAT = new HaskellCompositeNodeType("RULE_pfloat",  20);
public static readonly HaskellCompositeNodeType PCHAR = new HaskellCompositeNodeType("RULE_pchar",  21);
public static readonly HaskellCompositeNodeType PSTRING = new HaskellCompositeNodeType("RULE_pstring",  22);
public static readonly HaskellCompositeNodeType LITERAL = new HaskellCompositeNodeType("RULE_literal",  23);
public static readonly HaskellCompositeNodeType APAT = new HaskellCompositeNodeType("RULE_apat",  24);
public static readonly HaskellCompositeNodeType FUNLHS = new HaskellCompositeNodeType("RULE_funlhs",  25);
public static readonly HaskellCompositeNodeType LEXP = new HaskellCompositeNodeType("RULE_lexp",  26);
public static readonly HaskellCompositeNodeType QOP = new HaskellCompositeNodeType("RULE_qop",  27);
public static readonly HaskellCompositeNodeType EXP = new HaskellCompositeNodeType("RULE_exp",  28);
public static readonly HaskellCompositeNodeType RHS = new HaskellCompositeNodeType("RULE_rhs",  29);
public static readonly HaskellCompositeNodeType DECL = new HaskellCompositeNodeType("RULE_decl",  30);
public static readonly HaskellCompositeNodeType TOPDECL = new HaskellCompositeNodeType("RULE_topdecl",  31);
