//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/alexkane/study/spring-lang/Spring/src/Spring/src/Grammar/HaskellParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="HaskellParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IHaskellParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] HaskellParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] HaskellParser.ModuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pragmas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPragmas([NotNull] HaskellParser.PragmasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pragmas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPragmas([NotNull] HaskellParser.PragmasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pragma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPragma([NotNull] HaskellParser.PragmaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pragma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPragma([NotNull] HaskellParser.PragmaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtension([NotNull] HaskellParser.ExtensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtension([NotNull] HaskellParser.ExtensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] HaskellParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] HaskellParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.impdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpdecls([NotNull] HaskellParser.ImpdeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.impdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpdecls([NotNull] HaskellParser.ImpdeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.exports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExports([NotNull] HaskellParser.ExportsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.exports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExports([NotNull] HaskellParser.ExportsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.exprt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprt([NotNull] HaskellParser.ExprtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.exprt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprt([NotNull] HaskellParser.ExprtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.impdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpdecl([NotNull] HaskellParser.ImpdeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.impdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpdecl([NotNull] HaskellParser.ImpdeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.impspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpspec([NotNull] HaskellParser.ImpspecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.impspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpspec([NotNull] HaskellParser.ImpspecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.himport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHimport([NotNull] HaskellParser.HimportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.himport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHimport([NotNull] HaskellParser.HimportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.cname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCname([NotNull] HaskellParser.CnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.cname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCname([NotNull] HaskellParser.CnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.topdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopdecls([NotNull] HaskellParser.TopdeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.topdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopdecls([NotNull] HaskellParser.TopdeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.topdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopdecl([NotNull] HaskellParser.TopdeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.topdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopdecl([NotNull] HaskellParser.TopdeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.decls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecls([NotNull] HaskellParser.DeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.decls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecls([NotNull] HaskellParser.DeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] HaskellParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] HaskellParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.specs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecs([NotNull] HaskellParser.SpecsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.specs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecs([NotNull] HaskellParser.SpecsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpec([NotNull] HaskellParser.SpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpec([NotNull] HaskellParser.SpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.cdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCdecls([NotNull] HaskellParser.CdeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.cdecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCdecls([NotNull] HaskellParser.CdeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.cdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCdecl([NotNull] HaskellParser.CdeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.cdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCdecl([NotNull] HaskellParser.CdeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.idecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdecls([NotNull] HaskellParser.IdeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.idecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdecls([NotNull] HaskellParser.IdeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.idecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdecl([NotNull] HaskellParser.IdeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.idecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdecl([NotNull] HaskellParser.IdeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gendecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGendecl([NotNull] HaskellParser.GendeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gendecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGendecl([NotNull] HaskellParser.GendeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOps([NotNull] HaskellParser.OpsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.ops"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOps([NotNull] HaskellParser.OpsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.vars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVars([NotNull] HaskellParser.VarsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.vars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVars([NotNull] HaskellParser.VarsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fixity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixity([NotNull] HaskellParser.FixityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fixity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixity([NotNull] HaskellParser.FixityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] HaskellParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] HaskellParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.btype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBtype([NotNull] HaskellParser.BtypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.btype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBtype([NotNull] HaskellParser.BtypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.atype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtype([NotNull] HaskellParser.AtypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.atype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtype([NotNull] HaskellParser.AtypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gtycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGtycon([NotNull] HaskellParser.GtyconContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gtycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGtycon([NotNull] HaskellParser.GtyconContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.typecontext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypecontext([NotNull] HaskellParser.TypecontextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.typecontext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypecontext([NotNull] HaskellParser.TypecontextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.cls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCls([NotNull] HaskellParser.ClsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.cls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCls([NotNull] HaskellParser.ClsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.scontext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScontext([NotNull] HaskellParser.ScontextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.scontext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScontext([NotNull] HaskellParser.ScontextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.simpleclass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleclass([NotNull] HaskellParser.SimpleclassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.simpleclass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleclass([NotNull] HaskellParser.SimpleclassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.simpletype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpletype([NotNull] HaskellParser.SimpletypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.simpletype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpletype([NotNull] HaskellParser.SimpletypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.constrs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstrs([NotNull] HaskellParser.ConstrsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.constrs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstrs([NotNull] HaskellParser.ConstrsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.constr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstr([NotNull] HaskellParser.ConstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.constr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstr([NotNull] HaskellParser.ConstrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.newconstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewconstr([NotNull] HaskellParser.NewconstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.newconstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewconstr([NotNull] HaskellParser.NewconstrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fielddecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFielddecl([NotNull] HaskellParser.FielddeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fielddecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFielddecl([NotNull] HaskellParser.FielddeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.deriving"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeriving([NotNull] HaskellParser.DerivingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.deriving"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeriving([NotNull] HaskellParser.DerivingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.dclass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDclass([NotNull] HaskellParser.DclassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.dclass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDclass([NotNull] HaskellParser.DclassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.inst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInst([NotNull] HaskellParser.InstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.inst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInst([NotNull] HaskellParser.InstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFdecl([NotNull] HaskellParser.FdeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fdecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFdecl([NotNull] HaskellParser.FdeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.callconv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallconv([NotNull] HaskellParser.CallconvContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.callconv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallconv([NotNull] HaskellParser.CallconvContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.impent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpent([NotNull] HaskellParser.ImpentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.impent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpent([NotNull] HaskellParser.ImpentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.expent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpent([NotNull] HaskellParser.ExpentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.expent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpent([NotNull] HaskellParser.ExpentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.safety"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSafety([NotNull] HaskellParser.SafetyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.safety"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSafety([NotNull] HaskellParser.SafetyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.funlhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunlhs([NotNull] HaskellParser.FunlhsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.funlhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunlhs([NotNull] HaskellParser.FunlhsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.rhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRhs([NotNull] HaskellParser.RhsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.rhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRhs([NotNull] HaskellParser.RhsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gdrhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGdrhs([NotNull] HaskellParser.GdrhsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gdrhs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGdrhs([NotNull] HaskellParser.GdrhsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gdrh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGdrh([NotNull] HaskellParser.GdrhContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gdrh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGdrh([NotNull] HaskellParser.GdrhContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.guards"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGuards([NotNull] HaskellParser.GuardsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.guards"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGuards([NotNull] HaskellParser.GuardsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.guard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGuard([NotNull] HaskellParser.GuardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.guard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGuard([NotNull] HaskellParser.GuardContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExp([NotNull] HaskellParser.ExpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExp([NotNull] HaskellParser.ExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.infixexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixexp([NotNull] HaskellParser.InfixexpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.infixexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixexp([NotNull] HaskellParser.InfixexpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.lexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLexp([NotNull] HaskellParser.LexpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.lexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLexp([NotNull] HaskellParser.LexpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFexp([NotNull] HaskellParser.FexpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFexp([NotNull] HaskellParser.FexpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.aexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAexp([NotNull] HaskellParser.AexpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.aexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAexp([NotNull] HaskellParser.AexpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qual"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQual([NotNull] HaskellParser.QualContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qual"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQual([NotNull] HaskellParser.QualContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.alts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlts([NotNull] HaskellParser.AltsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.alts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlts([NotNull] HaskellParser.AltsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlt([NotNull] HaskellParser.AltContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.alt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlt([NotNull] HaskellParser.AltContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gdpats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGdpats([NotNull] HaskellParser.GdpatsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gdpats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGdpats([NotNull] HaskellParser.GdpatsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.ifgdpats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfgdpats([NotNull] HaskellParser.IfgdpatsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.ifgdpats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfgdpats([NotNull] HaskellParser.IfgdpatsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gdpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGdpat([NotNull] HaskellParser.GdpatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gdpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGdpat([NotNull] HaskellParser.GdpatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmts([NotNull] HaskellParser.StmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmts([NotNull] HaskellParser.StmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] HaskellParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] HaskellParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fbind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFbind([NotNull] HaskellParser.FbindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fbind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFbind([NotNull] HaskellParser.FbindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPat([NotNull] HaskellParser.PatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPat([NotNull] HaskellParser.PatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.lpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLpat([NotNull] HaskellParser.LpatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.lpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLpat([NotNull] HaskellParser.LpatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.apat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterApat([NotNull] HaskellParser.ApatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.apat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitApat([NotNull] HaskellParser.ApatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.fpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFpat([NotNull] HaskellParser.FpatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.fpat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFpat([NotNull] HaskellParser.FpatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gcon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGcon([NotNull] HaskellParser.GconContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gcon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGcon([NotNull] HaskellParser.GconContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar([NotNull] HaskellParser.VarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar([NotNull] HaskellParser.VarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qvar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQvar([NotNull] HaskellParser.QvarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qvar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQvar([NotNull] HaskellParser.QvarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.con"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCon([NotNull] HaskellParser.ConContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.con"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCon([NotNull] HaskellParser.ConContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qcon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQcon([NotNull] HaskellParser.QconContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qcon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQcon([NotNull] HaskellParser.QconContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.varop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarop([NotNull] HaskellParser.VaropContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.varop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarop([NotNull] HaskellParser.VaropContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qvarop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQvarop([NotNull] HaskellParser.QvaropContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qvarop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQvarop([NotNull] HaskellParser.QvaropContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.conop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConop([NotNull] HaskellParser.ConopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.conop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConop([NotNull] HaskellParser.ConopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qconop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQconop([NotNull] HaskellParser.QconopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qconop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQconop([NotNull] HaskellParser.QconopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOp([NotNull] HaskellParser.OpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOp([NotNull] HaskellParser.OpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQop([NotNull] HaskellParser.QopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQop([NotNull] HaskellParser.QopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.gconsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGconsym([NotNull] HaskellParser.GconsymContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.gconsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGconsym([NotNull] HaskellParser.GconsymContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.open"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpen([NotNull] HaskellParser.OpenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.open"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpen([NotNull] HaskellParser.OpenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.close"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClose([NotNull] HaskellParser.CloseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.close"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClose([NotNull] HaskellParser.CloseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSemi([NotNull] HaskellParser.SemiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSemi([NotNull] HaskellParser.SemiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] HaskellParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] HaskellParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.special"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecial([NotNull] HaskellParser.SpecialContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.special"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecial([NotNull] HaskellParser.SpecialContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.varid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarid([NotNull] HaskellParser.VaridContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.varid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarid([NotNull] HaskellParser.VaridContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.conid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConid([NotNull] HaskellParser.ConidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.conid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConid([NotNull] HaskellParser.ConidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbol([NotNull] HaskellParser.SymbolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbol([NotNull] HaskellParser.SymbolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.ascSymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAscSymbol([NotNull] HaskellParser.AscSymbolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.ascSymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAscSymbol([NotNull] HaskellParser.AscSymbolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.varsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarsym([NotNull] HaskellParser.VarsymContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.varsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarsym([NotNull] HaskellParser.VarsymContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.consym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConsym([NotNull] HaskellParser.ConsymContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.consym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConsym([NotNull] HaskellParser.ConsymContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.tyvar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTyvar([NotNull] HaskellParser.TyvarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.tyvar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTyvar([NotNull] HaskellParser.TyvarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.tycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTycon([NotNull] HaskellParser.TyconContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.tycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTycon([NotNull] HaskellParser.TyconContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.tycls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTycls([NotNull] HaskellParser.TyclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.tycls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTycls([NotNull] HaskellParser.TyclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.modid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModid([NotNull] HaskellParser.ModidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.modid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModid([NotNull] HaskellParser.ModidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qvarid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQvarid([NotNull] HaskellParser.QvaridContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qvarid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQvarid([NotNull] HaskellParser.QvaridContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qconid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQconid([NotNull] HaskellParser.QconidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qconid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQconid([NotNull] HaskellParser.QconidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qtycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQtycon([NotNull] HaskellParser.QtyconContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qtycon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQtycon([NotNull] HaskellParser.QtyconContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qtycls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQtycls([NotNull] HaskellParser.QtyclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qtycls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQtycls([NotNull] HaskellParser.QtyclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qvarsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQvarsym([NotNull] HaskellParser.QvarsymContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qvarsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQvarsym([NotNull] HaskellParser.QvarsymContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.qconsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQconsym([NotNull] HaskellParser.QconsymContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.qconsym"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQconsym([NotNull] HaskellParser.QconsymContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] HaskellParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] HaskellParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pfloat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfloat([NotNull] HaskellParser.PfloatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pfloat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfloat([NotNull] HaskellParser.PfloatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPchar([NotNull] HaskellParser.PcharContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPchar([NotNull] HaskellParser.PcharContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HaskellParser.pstring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPstring([NotNull] HaskellParser.PstringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HaskellParser.pstring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPstring([NotNull] HaskellParser.PstringContext context);
}
